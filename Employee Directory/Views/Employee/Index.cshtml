@model Employee_Directory.Models.ViewModels.EmployeeIndexViewModel

@{
    ViewData["Title"] = "Employee Directory";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-users me-2 text-primary"></i>Employee Directory
    </h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus me-2"></i>Add New Employee
    </a>
</div>

<!-- Search Form -->
<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-8">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-search"></i>
                    </span>
                    <input asp-for="SearchTerm" class="form-control" placeholder="Search by name or department..." />
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-grid gap-2 d-md-flex">
                    <button type="submit" class="btn btn-outline-primary">
                        <i class="fas fa-search me-2"></i>Search
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i>Clear
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Employee Count Info -->
<div class="mb-3">
    @if (Model.TotalEmployees > 0)
    {
        <p class="text-muted">
            <i class="fas fa-info-circle me-2"></i>
            Showing @Model.StartEmployee - @Model.EndEmployee of @Model.TotalEmployees employees
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <span class="text-primary">matching "@Model.SearchTerm"</span>
            }
        </p>
    }
</div>

<!-- Employee Table -->
@if (Model.Employees.Any())
{
    <div class="card shadow">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th><i class="fas fa-user me-2"></i>Name</th>
                            <th><i class="fas fa-envelope me-2"></i>Email</th>
                            <th><i class="fas fa-briefcase me-2"></i>Position</th>
                            <th><i class="fas fa-building me-2"></i>Department</th>
                            <th><i class="fas fa-phone me-2"></i>Phone</th>
                            <th><i class="fas fa-calendar me-2"></i>Hire Date</th>
                            <th><i class="fas fa-cog me-2"></i>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var employee in Model.Employees)
                        {
                            <tr>
                                <td>
                                    <strong>@employee.FullName</strong>
                                </td>
                                <td>
                                    <a href="mailto:@employee.Email" class="text-decoration-none">
                                        @employee.Email
                                    </a>
                                </td>
                                <td>
                                    <span class="badge bg-primary">@employee.Position</span>
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@employee.Department</span>
                                </td>
                                <td>
                                    <a href="tel:@employee.Phone" class="text-decoration-none">
                                        @employee.Phone
                                    </a>
                                </td>
                                <td>
                                    @employee.HireDate.ToString("MMM dd, yyyy")
                                    <br />
                                    <small class="text-muted">@employee.YearsOfService years</small>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@employee.EmployeeId"
                                           class="btn btn-outline-info btn-sm" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@employee.EmployeeId"
                                           class="btn btn-outline-warning btn-sm" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@employee.EmployeeId"
                                           class="btn btn-outline-danger btn-sm" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Employee pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)"
                       asp-route-searchTerm="@Model.SearchTerm">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                </li>

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i"
                           asp-route-searchTerm="@Model.SearchTerm">@i</a>
                    </li>
                }

                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)"
                       asp-route-searchTerm="@Model.SearchTerm">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>

        <div class="text-center text-muted">
            <small>Page @Model.CurrentPage of @Model.TotalPages</small>
        </div>
    }
}
else
{
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="fas fa-users fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">No employees found</h5>
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <p class="text-muted">
                    No employees match your search criteria.
                    <a asp-action="Index" class="text-primary">Show all employees</a>
                </p>
            }
            else
            {
                <p class="text-muted">Get started by adding your first employee.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Add Employee
                </a>
            }
        </div>
    </div>
}
